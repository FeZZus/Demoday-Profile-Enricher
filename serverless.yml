service: airtable-linkedin-extractor

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.11
  region: us-east-1
  environment:
    AIRTABLE_API_KEY: ${env:AIRTABLE_API_KEY}
    APIFY_API_KEY: ${env:APIFY_API_KEY}
    OPENAI_API_KEY: ${env:OPENAI_API_KEY}
    DYNAMODB_TABLE: ${self:service}-jobs-${sls:stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
        - s3:DeleteObject
        - s3:ListBucket
      Resource:
        - "arn:aws:s3:::${self:service}-data-${sls:stage}/*"
        - "arn:aws:s3:::${self:service}-data-${sls:stage}"

functions:
  # Health check
  health:
    handler: handlers.health.handler
    events:
      - http:
          path: health
          method: get
          cors: true

  # LinkedIn URL Extraction
  extract:
    handler: handlers.extract.handler
    events:
      - http:
          path: extract
          method: post
          cors: true
    timeout: 900  # 15 minutes for long-running extractions

  # Get job status
  getJobStatus:
    handler: handlers.jobs.get_status
    events:
      - http:
          path: status/{job_id}
          method: get
          cors: true

  # Get job results
  getJobResults:
    handler: handlers.jobs.get_results
    events:
      - http:
          path: results/{job_id}
          method: get
          cors: true

  # List all jobs
  listJobs:
    handler: handlers.jobs.list_jobs
    events:
      - http:
          path: jobs
          method: get
          cors: true

  # Delete job
  deleteJob:
    handler: handlers.jobs.delete_job
    events:
      - http:
          path: jobs/{job_id}
          method: delete
          cors: true

  # Apify Processing
  apifyProcess:
    handler: handlers.apify.process
    events:
      - http:
          path: apify/process
          method: post
          cors: true
    timeout: 900

  # Get Apify job status
  getApifyJobStatus:
    handler: handlers.apify.get_status
    events:
      - http:
          path: apify/status/{job_id}
          method: get
          cors: true

  # Get Apify job results
  getApifyJobResults:
    handler: handlers.apify.get_results
    events:
      - http:
          path: apify/results/{job_id}
          method: get
          cors: true

  # List Apify jobs
  listApifyJobs:
    handler: handlers.apify.list_jobs
    events:
      - http:
          path: apify/jobs
          method: get
          cors: true

  # Delete Apify job
  deleteApifyJob:
    handler: handlers.apify.delete_job
    events:
      - http:
          path: apify/jobs/{job_id}
          method: delete
          cors: true

  # Data Cleaner
  dataCleaner:
    handler: handlers.cleaner.process
    events:
      - http:
          path: cleaner/process
          method: post
          cors: true
    timeout: 900

  # Get Data Cleaner job status
  getCleanerJobStatus:
    handler: handlers.cleaner.get_status
    events:
      - http:
          path: cleaner/status/{job_id}
          method: get
          cors: true

  # Get Data Cleaner job results
  getCleanerJobResults:
    handler: handlers.cleaner.get_results
    events:
      - http:
          path: cleaner/results/{job_id}
          method: get
          cors: true

  # List Data Cleaner jobs
  listCleanerJobs:
    handler: handlers.cleaner.list_jobs
    events:
      - http:
          path: cleaner/jobs
          method: get
          cors: true

  # Delete Data Cleaner job
  deleteCleanerJob:
    handler: handlers.cleaner.delete_job
    events:
      - http:
          path: cleaner/jobs/{job_id}
          method: delete
          cors: true

  # Trait Extractor
  traitExtractor:
    handler: handlers.traits.process
    events:
      - http:
          path: traits/process
          method: post
          cors: true
    timeout: 900

  # Get Trait Extractor job status
  getTraitJobStatus:
    handler: handlers.traits.get_status
    events:
      - http:
          path: traits/status/{job_id}
          method: get
          cors: true

  # Get Trait Extractor job results
  getTraitJobResults:
    handler: handlers.traits.get_results
    events:
      - http:
          path: traits/results/{job_id}
          method: get
          cors: true

  # List Trait Extractor jobs
  listTraitJobs:
    handler: handlers.traits.list_jobs
    events:
      - http:
          path: traits/jobs
          method: get
          cors: true

  # Delete Trait Extractor job
  deleteTraitJob:
    handler: handlers.traits.delete_job
    events:
      - http:
          path: traits/jobs/{job_id}
          method: delete
          cors: true

  # Airtable Updater
  airtableUpdater:
    handler: handlers.airtable.update
    events:
      - http:
          path: airtable/update
          method: post
          cors: true
    timeout: 900

  # Get Airtable Updater job status
  getAirtableJobStatus:
    handler: handlers.airtable.get_status
    events:
      - http:
          path: airtable/status/{job_id}
          method: get
          cors: true

  # Get Airtable Updater job results
  getAirtableJobResults:
    handler: handlers.airtable.get_results
    events:
      - http:
          path: airtable/results/{job_id}
          method: get
          cors: true

  # List Airtable Updater jobs
  listAirtableJobs:
    handler: handlers.airtable.list_jobs
    events:
      - http:
          path: airtable/jobs
          method: get
          cors: true

  # Delete Airtable Updater job
  deleteAirtableJob:
    handler: handlers.airtable.delete_job
    events:
      - http:
          path: airtable/jobs/{job_id}
          method: delete
          cors: true

resources:
  Resources:
    JobsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: job_id
            AttributeType: S
          - AttributeName: job_type
            AttributeType: S
          - AttributeName: created_at
            AttributeType: S
        KeySchema:
          - AttributeName: job_id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: JobTypeIndex
            KeySchema:
              - AttributeName: job_type
                KeyType: HASH
              - AttributeName: created_at
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    DataBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-data-${sls:stage}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders: ['*']
              AllowedMethods: [GET, PUT, POST, DELETE]
              AllowedOrigins: ['*']
              MaxAge: 3000

plugins:
  - serverless-python-requirements
  - serverless-wsgi

custom:
  pythonRequirements:
    dockerizePip: true
    layer:
      name: python-deps
      description: Python dependencies for airtable-linkedin-extractor
    noDeploy:
      - coverage
      - pytest 